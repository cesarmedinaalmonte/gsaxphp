<?php

namespace AppBundle\Repository\Estudiante;

use AppBundle\Entity\Estudiante\Estudiante;
use AppBundle\Entity\Inscripcion\Inscripcion;

/**
 * EstudianteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EstudianteRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return mixed
     */
    public function totalEstudiantes()
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('COUNT(DISTINCT estudiante.id) as total')
            ->from(Estudiante::class, 'estudiante');
        try {
            return $qb->getQuery()->getSingleScalarResult();
        } catch (\Exception $exception) {
            return 0;
        }
    }

    /**
     * @return mixed
     */
    public function buscarPorNombre($nombre)
    {

        $sqb = $this->getEntityManager()->createQueryBuilder();
        $sqb->select('s_estudiante')
            ->from(Estudiante::class, 's_estudiante')
            ->from(Inscripcion::class, 'inscripcion')
            ->leftJoin('inscripcion.periodo', 'periodo')
            ->innerJoin('inscripcion.estudiantes', 'estudiantes')
            ->andWhere(
                $sqb->expr()->eq('s_estudiante.id', 'estudiantes.id'),
                $sqb->expr()->eq('periodo.activo', true)
            );

        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('estudiante')
            ->from(Estudiante::class, 'estudiante')
            ->andWhere(
                $qb->expr()->orX(
                    $qb->expr()->like('estudiante.nombre', $qb->expr()->literal("%{$nombre}%")),
                    $qb->expr()->like('estudiante.nombre', $qb->expr()->literal("%{$nombre}%"))
                ),
                $sqb->expr()->notIn('estudiante.id', $sqb->getDQL())
            );

        return $qb->getQuery()->getResult();

    }
}
